name: Build and test project
on: [push]
jobs:
  test-project:
    runs-on: ubuntu-18.04
    services:
      mysql:
        image: mysql:8.0
        ports:
          - '3306:3306'
        env:
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
          MYSQL_DATABASE: vapor_database
          MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - name: reset db
        run: |
          sudo systemctl enable mysql.service
          sudo systemctl start mysql.service
          mysql -h localhost --port 3306 -u vapor_username -pvapor_password vapor_database -e "drop database vapor_database;"
          mysql -h localhost --port 3306 -u vapor_username -pvapor_password vapor_database -e "create database vapor_database;"
      - name: Install swiftenv
        run: |
          git clone https://github.com/kylef/swiftenv.git ~/.swiftenv
          export SWIFTENV_ROOT="$HOME/.swiftenv"
          echo "$SWIFTENV_ROOT/bin" >> $GITHUB_PATH
      - name: Install Swift
        run: swiftenv install
      - name: Build and test
        run: swiftenv exec swift test --enable-test-discovery
        env:
          AWS_REGION: ap-northeast-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CONGNITO_IDP_USER_POOL_ID: ${{ secrets.CONGNITO_IDP_USER_POOL_ID }}
          CONGNITO_IDP_CLIENT_ID: ${{ secrets.CONGNITO_IDP_CLIENT_ID }}
          SNS_PLATFORM_APPLICATION_ARN: ${{ secrets.SNS_PLATFORM_APPLICATION_ARN }}
          DATABASE_URL: mysql://vapor_username:vapor_password@0.0.0.0/vapor_database
